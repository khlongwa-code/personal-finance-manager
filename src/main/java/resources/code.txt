import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

public class Utils {

    /**
     * Hashes the password with a salt to improve security
     * @param password as plain text
     * @param salt a random string unique to each user
     * @return a hash value of the password
     */
    public static String hashPassword(String password, String salt) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            String saltedPassword = salt + password;
            md.update(saltedPassword.getBytes());
            byte[] byteArray = md.digest();
            StringBuilder stringBuilder = new StringBuilder();

            for (byte b: byteArray) {
                stringBuilder.append(String.format("%02x", b));
            }

            return stringBuilder.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        return null;
    }

    /**
     * Generates a random salt
     * @return a generated salt
     */
    public static String generateSalt() {
        SecureRandom sr = new SecureRandom();
        byte[] salt = new byte[16];
        sr.nextBytes(salt);
        StringBuilder stringBuilder = new StringBuilder();

        for (byte b: salt) {
            stringBuilder.append(String.format("%02x", b));
        }

        return stringBuilder.toString();
    }

    /**
     * Compares the hashed password from the database to a hash of a plain-text password
     * @param plainPassword password entered by the user
     * @param salt salt stored in the database
     * @param hashedPassword password from the database
     * @return true if password matches, false otherwise
     */
    public static boolean passwordMatcher(String plainPassword, String salt, String hashedPassword) {
        return hashPassword(plainPassword, salt).equals(hashedPassword);
    }
}
